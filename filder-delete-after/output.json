
{
  "files": {
    "pages": {
      "Dashboard": "import { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/Card\";\nimport { Button } from \"@/components/ui/Button\";\n\nconst Dashboard = () => {\n  return (\n    <div className=\"flex-1 space-y-4 p-8 pt-6\">\n      <div className=\"flex items-center justify-between space-y-2\">\n        <h2 className=\"text-3xl font-bold tracking-tight\">Dashboard</h2>\n        <div className=\"flex items-center space-x-2\">\n          <Button>Download Report</Button>\n        </div>\n      </div>\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Revenue</CardTitle>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              className=\"h-4 w-4 text-muted-foreground\"\n            >\n              <path d=\"M12 2v20M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6\" />\n            </svg>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">$45,231.89</div>\n            <p className=\"text-xs text-muted-foreground\">\n              +20.1% from last month\n            </p>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Subscriptions</CardTitle>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              className=\"h-4 w-4 text-muted-foreground\"\n            >\n              <path d=\"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2\" />\n              <circle cx=\"9\" cy=\"7\" r=\"4\" />\n              <path d=\"M22 21v-2a4 4 0 0 0-3-3.87M16 3.13a4 4 0 0 1 0 7.75\" />\n            </svg>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">+2350</div>\n            <p className=\"text-xs text-muted-foreground\">\n              +180.1% from last month\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;",
      "Settings": "import { Button } from \"@/components/ui/Button\";\nimport { Input } from \"@/components/ui/Input\";\nimport { Label } from \"@radix-ui/react-label\";\n\nconst Settings = () => {\n  return (\n    <div className=\"flex-1 space-y-4 p-8 pt-6\">\n      <div className=\"flex items-center justify-between space-y-2\">\n        <h2 className=\"text-3xl font-bold tracking-tight\">Settings</h2>\n      </div>\n      <div className=\"grid gap-4 py-4\">\n        <div className=\"grid grid-cols-4 items-center gap-4\">\n          <Label htmlFor=\"name\" className=\"text-right\">\n            App Name\n          </Label>\n          <Input id=\"name\" defaultValue=\"My Awesome App\" className=\"col-span-3\" />\n        </div>\n        <div className=\"grid grid-cols-4 items-center gap-4\">\n          <Label htmlFor=\"email\" className=\"text-right\">\n            Admin Email\n          </Label>\n          <Input id=\"email\" defaultValue=\"admin@example.com\" className=\"col-span-3\" />\n        </div>\n        <div className=\"flex justify-end\">\n          <Button>Save Settings</Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Settings;"
    },
    "components": {
      "button/Button": "import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { cn } from \"@/lib/utils\";\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n);\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\";\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };",
      "card/Card": "import * as React from \"react\";\nimport { cn } from \"@/lib/utils\";\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className\n    )}\n    {...props}\n  />\n));\nCard.displayName = \"Card\";\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n));\nCardHeader.displayName = \"CardHeader\";\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n));\nCardTitle.displayName = \"CardTitle\";\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nCardDescription.displayName = \"CardDescription\";\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n));\nCardContent.displayName = \"CardContent\";\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n));\nCardFooter.displayName = \"CardFooter\";\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent };",
      "input/Input": "import * as React from \"react\";\nimport { cn } from \"@/lib/utils\";\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nInput.displayName = \"Input\";\n\nexport { Input };",
      "layout/Sidebar": "import { Link } from \"react-router-dom\";\nimport { Home, Settings } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\nimport { buttonVariants } from \"@/components/ui/Button\";\n\nconst Sidebar = () => {\n  return (\n    <div className=\"hidden border-r bg-sidebar-background lg:block\">\n      <div className=\"flex h-full max-h-screen flex-col gap-2\">\n        <div className=\"flex h-14 items-center justify-center border-b px-4 lg:h-[60px] lg:px-6\">\n          <Link to=\"/dashboard\" className=\"flex items-center gap-2 font-semibold\">\n            <span className=\"text-xl\">My App</span>\n          </Link>\n        </div>\n        <nav className=\"grid gap-1 py-4 px-2\">\n          <Link\n            to=\"/dashboard\"\n            className={cn(\n              buttonVariants({ variant: \"ghost\" }),\n              \"justify-start gap-3\"\n            )}\n          >\n            <Home className=\"h-4 w-4\" />\n            Dashboard\n          </Link>\n          <Link\n            to=\"/settings\"\n            className={cn(\n              buttonVariants({ variant: \"ghost\" }),\n              \"justify-start gap-3\"\n            )}\n          >\n            <Settings className=\"h-4 w-4\" />\n            Settings\n          </Link>\n        </nav>\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar;"
    },
    "lib/utils.ts": "import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}",
    "index": "import { useState } from \"react\";\nimport { Outlet } from \"react-router-dom\";\nimport Sidebar from \"@/components/layout/Sidebar\";\n\nconst Index = () => {\n  const [selectedPlatform, setSelectedPlatform] = useState<string>(\"\");\n  const [activeTab, setActiveTab] = useState(\"dashboard\");\n\n  return (\n    <div className=\"grid min-h-screen w-full lg:grid-cols-[280px_1fr]\">\n      <Sidebar />\n      <div className=\"flex flex-col\">\n        <header className=\"flex h-14 items-center gap-4 border-b bg-background px-4 lg:h-[60px] lg:px-6\">\n          {/* Top Navbar elements can go here if needed */}\n          <div className=\"flex-1\"></div>\n        </header>\n        <main className=\"flex flex-1 flex-col gap-4 p-4 lg:gap-6 lg:p-6\">\n          <Outlet /> {/* This is where nested routes will render */}\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default Index;",
    "NotFound.tsx": "import { useLocation } from \"react-router-dom\";\nimport { useEffect } from \"react\";\n\nconst NotFound = () => {\n  const location = useLocation();\n\n  useEffect(() => {\n    console.error(\n      \"404 Error: User attempted to access non-existent route:\",\n      location.pathname\n    );\n  }, [location.pathname]);\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-100\">\n      <div className=\"text-center\">\n        <h1 className=\"text-4xl font-bold mb-4\">404</h1>\n        <p className=\"text-xl text-gray-600 mb-4\">Oops! Page not found</p>\n        <a href=\"/\" className=\"text-blue-500 hover:text-blue-700 underline\">\n          Return to Home\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default NotFound;",
    "Appcss": "#root {\n  max-width: 1280px;\n  margin: 0 auto;\n  padding: 2rem;\n  text-align: center;\n}\n\n.logo {\n  height: 6em;\n  padding: 1.5em;\n  will-change: filter;\n  transition: filter 300ms;\n}\n.logo:hover {\n  filter: drop-shadow(0 0 2em #646cffaa);\n}\n.logo.react:hover {\n  filter: drop-shadow(0 0 2em #61dafbaa);\n}\n\n@keyframes logo-spin {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n@media (prefers-reduced-motion: no-preference) {\n  a:nth-of-type(2) .logo {\n    animation: logo-spin infinite 20s linear;\n  }\n}\n\n.card {\n  padding: 2em;\n}\n\n.read-the-docs {\n  color: #888;\n}",
    "Apptsx": "import { Toaster } from \"@/components/ui/toaster\";\nimport { Toaster as Sonner } from \"@/components/ui/sonner\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Index from \"./pages/Index\";\nimport NotFound from \"./pages/NotFound\";\nimport Dashboard from \"./pages/Dashboard\";\nimport Settings from \"./pages/Settings\";\n\nconst queryClient = new QueryClient();\n\nconst App = () => (\n  <QueryClientProvider client={queryClient}>\n    <TooltipProvider>\n      <Toaster />\n      <Sonner />\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/\" element={<Index />}>\n            <Route index element={<Dashboard />} /> {/* Default child route for / */}\n            <Route path=\"dashboard\" element={<Dashboard />} />\n            <Route path=\"settings\" element={<Settings />} />\n          </Route>\n          {/* ADD ALL CUSTOM ROUTES ABOVE THE CATCH-ALL \"*\" ROUTE */}\n          <Route path=\"*\" element={<NotFound />} />\n        </Routes>\n      </BrowserRouter>\n    </TooltipProvider>\n  </QueryClientProvider>\n);\n\nexport default App;",
    "indexcss": "@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. \nAll colors MUST be HSL.\n*/\n\n@layer base {\n  :root {\n    --background: 248 250% 98%;\n    --foreground: 230 15% 15%;\n\n    --card: 0 0% 100%;\n    --card-foreground: 230 15% 15%;\n\n    --popover: 0 0% 100%;\n    --popover-foreground: 230 15% 15%;\n\n    --primary: 262 83% 58%;\n    --primary-foreground: 210 40% 98%;\n    --primary-glow: 262 83% 68%;\n\n    --secondary: 220 14% 96%;\n    --secondary-foreground: 230 15% 15%;\n\n    --muted: 220 14% 96%;\n    --muted-foreground: 215 16% 47%;\n\n    --accent: 262 83% 58%;\n    --accent-foreground: 210 40% 98%;\n\n    --destructive: 0 84% 60%;\n    --destructive-foreground: 210 40% 98%;\n\n    --border: 220 13% 91%;\n    --input: 220 13% 91%;\n    --ring: 262 83% 58%;\n\n    /* Marketing platform specific tokens */\n    --gradient-primary: linear-gradient(135deg, hsl(262 83% 58%), hsl(312 73% 58%));\n    --gradient-secondary: linear-gradient(135deg, hsl(220 100% 70%), hsl(262 83% 58%));\n    --gradient-accent: linear-gradient(135deg, hsl(312 73% 58%), hsl(262 83% 68%));\n    --gradient-surface: linear-gradient(135deg, hsl(248 250% 98%), hsl(220 14% 96%));\n    \n    --shadow-brand: 0 10px 30px -5px hsl(262 83% 58% / 0.2);\n    --shadow-card: 0 4px 15px -2px hsl(230 15% 15% / 0.08);\n    --shadow-elevated: 0 20px 50px -10px hsl(262 83% 58% / 0.25);\n\n    --creative-blue: 220 100% 70%;\n    --creative-purple: 262 83% 58%;\n    --creative-pink: 312 73% 58%;\n    --success-green: 142 76% 46%;\n\n    --radius: 0.5rem;\n\n    --sidebar-background: 0 0% 98%;\n\n    --sidebar-foreground: 240 5.3% 26.1%;\n\n    --sidebar-primary: 240 5.9% 10%;\n\n    --sidebar-primary-foreground: 0 0% 98%;\n\n    --sidebar-accent: 240 4.8% 95.9%;\n\n    --sidebar-accent-foreground: 240 5.9% 10%;\n\n    --sidebar-border: 220 13% 91%;\n\n    --sidebar-ring: 217.2 91.2% 59.8%;\n  }\n\n  .dark {\n    --background: 222.2 84% 4.9%;\n    --foreground: 210 40% 98%;\n\n    --card: 222.2 84% 4.9%;\n    --card-foreground: 210 40% 98%;\n\n    --popover: 222.2 84% 4.9%;\n    --popover-foreground: 210 40% 98%;\n\n    --primary: 210 40% 98%;\n    --primary-foreground: 222.2 47.4% 11.2%;\n\n    --secondary: 217.2 32.6% 17.5%;\n    --secondary-foreground: 210 40% 98%;\n\n    --muted: 217.2 32.6% 17.5%;\n    --muted-foreground: 215 20.2% 65.1%;\n\n    --accent: 217.2 32.6% 17.5%;\n    --accent-foreground: 210 40% 98%;\n\n    --destructive: 0 62.8% 30.6%;\n    --destructive-foreground: 210 40% 98%;\n\n    --border: 217.2 32.6% 17.5%;\n    --input: 217.2 32.6% 17.5%;\n    --ring: 212.7 26.8% 83.9%;\n    --sidebar-background: 240 5.9% 10%;\n    --sidebar-foreground: 240 4.8% 95.9%;\n    --sidebar-primary: 224.3 76.3% 48%;\n    --sidebar-primary-foreground: 0 0% 100%;\n    --sidebar-accent: 240 3.7% 15.9%;\n    --sidebar-accent-foreground: 240 4.8% 95.9%;\n    --sidebar-border: 240 3.7% 15.9%;\n    --sidebar-ring: 217.2 91.2% 59.8%;\n  }\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply bg-background text-foreground;\n  }\n}"
  }
}
