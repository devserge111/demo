
[
  {
    "type": "globalCss",
    "fileName": "index.css",
    "dir": "src",
    "value": "@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n/* Define custom font families based on guidelines */\n@layer base {\n  :root {\n    /* Custom color variables, assuming they are mapped in tailwind.config.js */\n    --color-primary-blue: #3b82f6;\n    --color-accent-orange: #fb7185;\n    --color-background-gray: #f8fafc;\n\n    /* Shadcn UI colors adjustments if needed, though default will work with theme */\n    --background: var(--color-background-gray);\n    --foreground: 222.2 47.4% 11.2%;\n    --primary: var(--color-primary-blue);\n    --primary-foreground: 210 40% 98%;\n    --accent: var(--color-accent-orange);\n    --accent-foreground: 222.2 47.4% 11.2%;\n\n    /* Other shadcn variables */\n    --card: 0 0% 100%;\n    --card-foreground: 222.2 47.4% 11.2%;\n\n    --popover: 0 0% 100%;\n    --popover-foreground: 222.2 47.4% 11.2%;\n\n    --destructive: 0 84.2% 60.2%;\n    --destructive-foreground: 210 40% 98%;\n\n    --border: 214.3 31.8% 91.4%;\n    --input: 214.3 31.8% 91.4%;\n    --ring: 222.2 84% 4.9%;\n\n    --radius: 0.5rem;\n  }\n\n  body {\n    @apply font-inter bg-slate-50 text-slate-900;\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    @apply font-poppins;\n  }\n\n  /* Assuming Poppins and Inter are imported via link tags in index.html or similar */\n  /* e.g., <link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&family=Poppins:wght@600;700&display=swap\" rel=\"stylesheet\"> */\n}\n\n/* Custom styles for platform icons with hover animations */\n.platform-icon {\n  @apply transition-transform duration-200 ease-in-out hover:scale-110;\n}\n"
  },
  {
    "type": "component",
    "fileName": "App.tsx",
    "dir": "src",
    "value": "import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Layout from './components/Layout';\nimport Dashboard from './pages/Dashboard';\nimport ContentGenerator from './pages/ContentGenerator';\nimport ContentScheduler from './pages/ContentScheduler';\nimport Analytics from './pages/Analytics';\nimport Settings from './pages/Settings';\n\nfunction App() {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<Layout />}>\n          <Route index element={<Dashboard />} />\n          <Route path=\"content-generator\" element={<ContentGenerator />} />\n          <Route path=\"content-scheduler\" element={<ContentScheduler />} />\n          <Route path=\"analytics\" element={<Analytics />} />\n          <Route path=\"settings\" element={<Settings />} />\n        </Route>\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n"
  },
  {
    "type": "component",
    "fileName": "Layout.tsx",
    "dir": "src/components",
    "value": "import React from 'react';\nimport { Outlet, NavLink } from 'react-router-dom';\nimport { Home, Sparkle, Calendar, BarChart2, Settings, Users, MessageSquare } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Separator } from '@/components/ui/separator';\n\nconst Layout: React.FC = () => {\n  const navItems = [\n    { name: 'Dashboard', path: '/', icon: Home },\n    { name: 'AI Content Generator', path: '/content-generator', icon: Sparkle },\n    { name: 'Content Scheduler', path: '/content-scheduler', icon: Calendar },\n    { name: 'Analytics Overview', path: '/analytics', icon: BarChart2 },\n    { name: 'Team Collaboration', path: '/settings/team', icon: Users },\n    { name: 'Brand Voice Settings', path: '/settings', icon: Settings }\n  ];\n\n  return (\n    <div className=\"flex min-h-screen bg-slate-50\">\n      {/* Sidebar */}\n      <aside className=\"w-64 bg-white border-r border-slate-200 p-6 flex flex-col shadow-lg\">\n        <div className=\"mb-8\">\n          <h1 className=\"text-2xl font-poppins font-bold text-blue-600\">SocialSpark</h1>\n          <p className=\"text-sm text-slate-500\">Marketing App</p>\n        </div>\n        <nav className=\"flex-1\">\n          <ul className=\"space-y-2\">\n            {navItems.map((item) => (\n              <li key={item.name}>\n                <NavLink\n                  to={item.path}\n                  className={({ isActive }) =>\n                    `flex items-center space-x-3 p-3 rounded-lg transition-colors duration-200 ` +\n                    (isActive ? 'bg-blue-100 text-blue-700 font-semibold' : 'text-slate-600 hover:bg-slate-100 hover:text-blue-600')\n                  }\n                >\n                  <item.icon className=\"w-5 h-5\" />\n                  <span>{item.name}</span>\n                </NavLink>\n              </li>\n            ))}\n          </ul>\n        </nav>\n        <div className=\"mt-auto\">\n          <Separator className=\"my-4\" />\n          <Button variant=\"outline\" className=\"w-full flex items-center justify-center space-x-2 text-slate-600 hover:text-blue-600\">\n            <MessageSquare className=\"w-4 h-4\" />\n            <span>Support</span>\n          </Button>\n        </div>\n      </aside>\n\n      {/* Main Content Area */}\n      <main className=\"flex-1 p-8 overflow-auto\">\n        <Outlet />\n      </main>\n    </div>\n  );\n};\n\nexport default Layout;\n"
  },
  {
    "type": "page",
    "fileName": "Dashboard.tsx",
    "dir": "src/pages",
    "value": "import React from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { TrendingUp, Users, Calendar, Sparkle } from 'lucide-react';\n\nconst Dashboard: React.FC = () => {\n  return (\n    <div className=\"space-y-8\">\n      <h1 className=\"text-4xl font-poppins font-bold text-slate-900\">Welcome to SocialSpark!</h1>\n      <p className=\"text-lg text-slate-600\">Your unified dashboard for effortless social media marketing.</p>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        <Card className=\"shadow-sm hover:shadow-md transition-shadow duration-200\">\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-lg font-poppins\">AI Content Generator</CardTitle>\n            <Sparkle className=\"h-6 w-6 text-blue-500\" />\n          </CardHeader>\n          <CardContent>\n            <CardDescription className=\"text-slate-500 mb-4\">Craft engaging captions, posts, and ad copy instantly.</CardDescription>\n            <Button className=\"bg-rose-500 hover:bg-rose-600 text-white\">Generate Content</Button>\n          </CardContent>\n        </Card>\n\n        <Card className=\"shadow-sm hover:shadow-md transition-shadow duration-200\">\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-lg font-poppins\">Content Scheduler</CardTitle>\n            <Calendar className=\"h-6 w-6 text-blue-500\" />\n          </CardHeader>\n          <CardContent>\n            <CardDescription className=\"text-slate-500 mb-4\">Plan and schedule posts across multiple platforms with ease.</CardDescription>\n            <Button variant=\"outline\">View Calendar</Button>\n          </CardContent>\n        </Card>\n\n        <Card className=\"shadow-sm hover:shadow-md transition-shadow duration-200\">\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-lg font-poppins\">Analytics Overview</CardTitle>\n            <TrendingUp className=\"h-6 w-6 text-blue-500\" />\n          </CardHeader>\n          <CardContent>\n            <CardDescription className=\"text-slate-500 mb-4\">Track engagement metrics and performance trends.</CardDescription>\n            <Button variant=\"outline\">View Analytics</Button>\n          </CardContent>\n        </Card>\n      </div>\n\n      <section className=\"mt-12\">\n        <h2 className=\"text-3xl font-poppins font-bold text-slate-800 mb-6\">Quick Actions</h2>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <Button className=\"py-6 text-lg bg-blue-500 hover:bg-blue-600 text-white\">\n            <Sparkle className=\"mr-2 h-5 w-5\" />\n            Start Generating Content\n          </Button>\n          <Button variant=\"outline\" className=\"py-6 text-lg\">\n            <Users className=\"mr-2 h-5 w-5\" />\n            Invite Your Team\n          </Button>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"
  },
  {
    "type": "page",
    "fileName": "ContentGenerator.tsx",
    "dir": "src/pages",
    "value": "import React, { useState } from 'react';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Button } from '@/components/ui/button';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Label } from '@/components/ui/label';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Facebook, Instagram, Twitter, Linkedin, Copy } from 'lucide-react';\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@/components/ui/tooltip';\n\nconst ContentGenerator: React.FC = () => {\n  const [topic, setTopic] = useState('');\n  const [platform, setPlatform] = useState('');\n  const [generatedContent, setGeneratedContent] = useState('');\n  const [generatedHashtags, setGeneratedHashtags] = useState('');\n\n  const handleGenerate = () => {\n    // Simulate AI content generation based on topic and platform\n    if (topic.trim() === '') {\n      setGeneratedContent('Please enter a topic to generate content.');\n      setGeneratedHashtags('');\n      return;\n    }\n\n    let content = ``;\n    let hashtags = ``;\n\n    switch (platform) {\n      case 'facebook':\n        content = `ðŸš€ New Post Alert! ${topic} is changing the game. Discover how to stay ahead! #Innovation #${topic.replace(/\\s/g, '')}Insights`;\n        hashtags = `#${topic.replace(/\\s/g, '')} #SocialSpark #DigitalMarketing #FacebookTips`;\n        break;\n      case 'instagram':\n        content = `âœ¨ Elevate your feed! Unlocking the secrets of ${topic}. Double tap if you agree! ðŸ‘‡`;\n        hashtags = `#${topic.replace(/\\s/g, '')} #InstaGood #MarketingGoals #VisualContent #SocialMedia`;\n        break;\n      case 'twitter':\n        content = `Breaking down ${topic}: The future is here. What are your thoughts? #${topic.replace(/\\s/g, '')} #FutureOfMarketing #TweetThis`;\n        hashtags = `#${topic.replace(/\\s/g, '')} #TwitterMarketing #Trends`;\n        break;\n      case 'linkedin':\n        content = `Exploring the impact of ${topic} on modern business strategies. A must-read for professionals! #${topic.replace(/\\s/g, '')} #LinkedInPost #BusinessInsights`;\n        hashtags = `#${topic.replace(/\\s/g, '')} #ProfessionalGrowth #ThoughtLeadership`;\n        break;\n      default:\n        content = `Here's some AI-generated content about ${topic}:\n        \n        \"In today's dynamic landscape, understanding ${topic} is crucial for success. Leverage cutting-edge insights to transform your strategy and achieve unparalleled growth. Stay tuned for more!\"`;\n        hashtags = `#${topic.replace(/\\s/g, '')} #AIContent #MarketingStrategy #Innovation`;\n    }\n\n    setGeneratedContent(content);\n    setGeneratedHashtags(hashtags);\n  };\n\n  const handleCopyToClipboard = (text: string) => {\n    navigator.clipboard.writeText(text);\n    // Potentially add a toast notification here\n  };\n\n  return (\n    <div className=\"space-y-8\">\n      <h1 className=\"text-4xl font-poppins font-bold text-slate-900\">AI Content Generator</h1>\n      <p className=\"text-lg text-slate-600\">Automatically create engaging captions, posts, and ad copy tailored for various platforms.</p>\n\n      <Card className=\"p-6 shadow-md\">\n        <CardHeader className=\"px-0 pt-0\">\n          <CardTitle className=\"text-2xl font-poppins\">Generate New Content</CardTitle>\n          <CardDescription>Input your topic, select a platform, and let AI do the rest.</CardDescription>\n        </CardHeader>\n        <CardContent className=\"px-0 pb-0 space-y-6\">\n          <div className=\"grid w-full items-center gap-1.5\">\n            <Label htmlFor=\"topic\">Content Topic / Keywords</Label>\n            <Textarea\n              id=\"topic\"\n              placeholder=\"e.g., 'Benefits of remote work', 'Sustainable fashion trends'\"\n              value={topic}\n              onChange={(e) => setTopic(e.target.value)}\n              className=\"min-h-[100px]\"\n            />\n          </div>\n\n          <div className=\"grid w-full items-center gap-1.5\">\n            <Label htmlFor=\"platform\">Target Platform</Label>\n            <Select onValueChange={setPlatform} value={platform}>\n              <SelectTrigger id=\"platform\" className=\"w-[180px]\">\n                <SelectValue placeholder=\"Select platform\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"facebook\">\n                  <div className=\"flex items-center gap-2 platform-icon\"><Facebook className=\"w-4 h-4\" /> Facebook</div>\n                </SelectItem>\n                <SelectItem value=\"instagram\">\n                  <div className=\"flex items-center gap-2 platform-icon\"><Instagram className=\"w-4 h-4\" /> Instagram</div>\n                </SelectItem>\n                <SelectItem value=\"twitter\">\n                  <div className=\"flex items-center gap-2 platform-icon\"><Twitter className=\"w-4 h-4\" /> Twitter</div>\n                </SelectItem>\n                <SelectItem value=\"linkedin\">\n                  <div className=\"flex items-center gap-2 platform-icon\"><Linkedin className=\"w-4 h-4\" /> LinkedIn</div>\n                </SelectItem>\n                <SelectItem value=\"general\">\n                  <div className=\"flex items-center gap-2\">General / All</div>\n                </SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n\n          <Button onClick={handleGenerate} className=\"w-full py-3 bg-blue-500 hover:bg-blue-600 text-white\">\n            Generate Content & Hashtags\n          </Button>\n        </CardContent>\n      </Card>\n\n      {generatedContent && (\n        <Card className=\"p-6 shadow-md\">\n          <CardHeader className=\"px-0 pt-0\">\n            <CardTitle className=\"text-2xl font-poppins\">Generated Content & Hashtags</CardTitle>\n            <CardDescription>Review and copy your AI-generated content and suggested hashtags.</CardDescription>\n          </CardHeader>\n          <CardContent className=\"px-0 pb-0 space-y-4\">\n            <div>\n              <Label className=\"mb-2 block\">Content:</Label>\n              <div className=\"relative\">\n                <Textarea readOnly value={generatedContent} className=\"min-h-[150px] bg-slate-50 border-slate-200\" />\n                <TooltipProvider>\n                  <Tooltip>\n                    <TooltipTrigger asChild>\n                      <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        className=\"absolute top-2 right-2 p-2 hover:bg-slate-100 transition-colors\"\n                        onClick={() => handleCopyToClipboard(generatedContent)}\n                      >\n                        <Copy className=\"w-4 h-4 text-slate-500\" />\n                      </Button>\n                    </TooltipTrigger>\n                    <TooltipContent>\n                      <p>Copy Content</p>\n                    </TooltipContent>\n                  </Tooltip>\n                </TooltipProvider>\n              </div>\n            </div>\n            <div>\n              <Label className=\"mb-2 block\">Hashtags:</Label>\n              <div className=\"relative\">\n                <Textarea readOnly value={generatedHashtags} className=\"min-h-[80px] bg-slate-50 border-slate-200\" />\n                <TooltipProvider>\n                  <Tooltip>\n                    <TooltipTrigger asChild>\n                      <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        className=\"absolute top-2 right-2 p-2 hover:bg-slate-100 transition-colors\"\n                        onClick={() => handleCopyToClipboard(generatedHashtags)}\n                      >\n                        <Copy className=\"w-4 h-4 text-slate-500\" />\n                      </Button>\n                    </TooltipTrigger>\n                    <TooltipContent>\n                      <p>Copy Hashtags</p>\n                    </TooltipContent>\n                  </Tooltip>\n                </TooltipProvider>\n              </div>\n            </div>\n            <Button className=\"bg-rose-500 hover:bg-rose-600 text-white w-full\">Publish Now</Button>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  );\n};\n\nexport default ContentGenerator;\n"
  },
  {
    "type": "page",
    "fileName": "ContentScheduler.tsx",
    "dir": "src/pages",
    "value": "import React from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { CalendarIcon } from 'lucide-react';\nimport { Calendar } from '@/components/ui/calendar';\n\nconst ContentScheduler: React.FC = () => {\n  const [date, setDate] = React.useState<Date | undefined>(new Date());\n\n  return (\n    <div className=\"space-y-8\">\n      <h1 className=\"text-4xl font-poppins font-bold text-slate-900\">Content Scheduler</h1>\n      <p className=\"text-lg text-slate-600\">Plan and schedule your social media posts across multiple platforms using a visual calendar.</p>\n\n      <Card className=\"p-6 shadow-md\">\n        <CardHeader className=\"px-0 pt-0\">\n          <CardTitle className=\"text-2xl font-poppins\">Your Content Calendar</CardTitle>\n          <CardDescription>Select a date to view or add scheduled posts.</CardDescription>\n        </CardHeader>\n        <CardContent className=\"px-0 pb-0 space-y-6 flex flex-col items-center lg:flex-row lg:items-start lg:space-x-8\">\n          <div className=\"flex-shrink-0\">\n            <Calendar\n              mode=\"single\"\n              selected={date}\n              onSelect={setDate}\n              className=\"rounded-md border shadow-md bg-white\"\n            />\n          </div>\n          <div className=\"flex-1 w-full mt-6 lg:mt-0\">\n            <h3 className=\"text-xl font-poppins font-semibold text-slate-800 mb-4\">Posts for {date ? date.toDateString() : 'selected date'}</h3>\n            <div className=\"border border-dashed border-slate-300 rounded-lg p-6 text-center text-slate-500 flex flex-col items-center justify-center min-h-[200px]\">\n              <CalendarIcon className=\"w-10 h-10 mb-3 text-slate-400\" />\n              <p className=\"mb-4\">No posts scheduled for this date.</p>\n              <Button className=\"bg-rose-500 hover:bg-rose-600 text-white\">\n                Schedule New Post\n              </Button>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      <Card className=\"p-6 shadow-md\">\n        <CardHeader className=\"px-0 pt-0\">\n          <CardTitle className=\"text-2xl font-poppins\">Upcoming Posts</CardTitle>\n          <CardDescription>A quick overview of your next scheduled content.</CardDescription>\n        </CardHeader>\n        <CardContent className=\"px-0 pb-0\">\n          <div className=\"text-slate-500\">No upcoming posts found.</div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default ContentScheduler;\n"
  },
  {
    "type": "page",
    "fileName": "Analytics.tsx",
    "dir": "src/pages",
    "value": "import React from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { TrendingUp, Users, MessageSquare, Heart } from 'lucide-react';\n\nconst data = [\n  { name: 'Jan', followers: 4000, likes: 2400, comments: 1000 },\n  { name: 'Feb', followers: 3000, likes: 1398, comments: 2210 },\n  { name: 'Mar', followers: 2000, likes: 9800, comments: 2290 },\n  { name: 'Apr', followers: 2780, likes: 3908, comments: 2000 },\n  { name: 'May', followers: 1890, likes: 4800, comments: 2181 },\n  { name: 'Jun', followers: 2390, likes: 3800, comments: 2500 },\n  { name: 'Jul', followers: 3490, likes: 4300, comments: 2100 },\n];\n\nconst Analytics: React.FC = () => {\n  return (\n    <div className=\"space-y-8\">\n      <h1 className=\"text-4xl font-poppins font-bold text-slate-900\">Analytics Overview</h1>\n      <p className=\"text-lg text-slate-600\">View engagement metrics, performance comparisons, and growth trends across your channels.</p>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <Card className=\"shadow-sm\">\n          <CardHeader className=\"pb-2\">\n            <CardDescription>Total Followers</CardDescription>\n            <CardTitle className=\"text-3xl\">+12,450</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-xs text-slate-500\">+18% from last month</div>\n          </CardContent>\n        </Card>\n        <Card className=\"shadow-sm\">\n          <CardHeader className=\"pb-2\">\n            <CardDescription>Total Likes</CardDescription>\n            <CardTitle className=\"text-3xl\">+56,789</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-xs text-slate-500\">+12% from last month</div>\n          </CardContent>\n        </Card>\n        <Card className=\"shadow-sm\">\n          <CardHeader className=\"pb-2\">\n            <CardDescription>Total Comments</CardDescription>\n            <CardTitle className=\"text-3xl\">+8,123</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-xs text-slate-500\">+25% from last month</div>\n          </CardContent>\n        </Card>\n        <Card className=\"shadow-sm\">\n          <CardHeader className=\"pb-2\">\n            <CardDescription>Avg. Engagement Rate</CardDescription>\n            <CardTitle className=\"text-3xl\">3.5%</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-xs text-slate-500\">+0.5% from last month</div>\n          </CardContent>\n        </Card>\n      </div>\n\n      <Card className=\"p-6 shadow-md\">\n        <CardHeader className=\"px-0 pt-0\">\n          <CardTitle className=\"text-2xl font-poppins\">Engagement Trends</CardTitle>\n          <CardDescription>Follower growth, likes, and comments over time.</CardDescription>\n        </CardHeader>\n        <CardContent className=\"px-0 pb-0 h-[350px]\">\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <LineChart\n              data={data}\n              margin={{\n                top: 5,\n                right: 30,\n                left: 20,\n                bottom: 5,\n              }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#e2e8f0\" />\n              <XAxis dataKey=\"name\" />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              <Line type=\"monotone\" dataKey=\"followers\" stroke=\"#3B82F6\" activeDot={{ r: 8 }} name=\"Followers\" />\n              <Line type=\"monotone\" dataKey=\"likes\" stroke=\"#FB7185\" name=\"Likes\" />\n              <Line type=\"monotone\" dataKey=\"comments\" stroke=\"#10B981\" name=\"Comments\" />\n            </LineChart>\n          </ResponsiveContainer>\n        </CardContent>\n      </Card>\n\n      <Card className=\"p-6 shadow-md\">\n        <CardHeader className=\"px-0 pt-0\">\n          <CardTitle className=\"text-2xl font-poppins\">Channel Performance</CardTitle>\n          <CardDescription>Breakdown of performance by social media platform.</CardDescription>\n        </CardHeader>\n        <CardContent className=\"px-0 pb-0\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            <div className=\"border rounded-md p-4 bg-slate-50\">\n              <h4 className=\"font-semibold text-blue-700\">Facebook</h4>\n              <p className=\"text-sm text-slate-600\">Reach: 15,000 | Engagement: 2.5%</p>\n            </div>\n            <div className=\"border rounded-md p-4 bg-slate-50\">\n              <h4 className=\"font-semibold text-rose-700\">Instagram</h4>\n              <p className=\"text-sm text-slate-600\">Reach: 20,000 | Engagement: 4.1%</p>\n            </div>\n            <div className=\"border rounded-md p-4 bg-slate-50\">\n              <h4 className=\"font-semibold text-blue-800\">LinkedIn</h4>\n              <p className=\"text-sm text-slate-600\">Reach: 8,000 | Engagement: 3.0%</p>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      <section className=\"text-center mt-12\">\n        <Button className=\"bg-rose-500 hover:bg-rose-600 text-white\">\n          Generate Custom Report\n        </Button>\n      </section>\n    </div>\n  );\n};\n\nexport default Analytics;\n"
  },
  {
    "type": "page",
    "fileName": "Settings.tsx",
    "dir": "src/pages",
    "value": "import React, { useState } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Label } from '@/components/ui/label';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Separator } from '@/components/ui/separator';\n\nconst Settings: React.FC = () => {\n  const [brandTone, setBrandTone] = useState('professional');\n  const [writingStyle, setWritingStyle] = useState('');\n  const [formattingPreferences, setFormattingPreferences] = useState('');\n\n  const handleSaveBrandVoice = () => {\n    console.log('Saving Brand Voice:', { brandTone, writingStyle, formattingPreferences });\n    // Here you would typically send this data to a backend API\n    alert('Brand Voice settings saved!');\n  };\n\n  const [teamMembers, setTeamMembers] = useState([\n    { id: 1, name: 'Alice Johnson', email: 'alice@socialspark.com', role: 'Admin' },\n    { id: 2, name: 'Bob Smith', email: 'bob@socialspark.com', role: 'Editor' },\n  ]);\n  const [newMemberEmail, setNewMemberEmail] = useState('');\n\n  const handleInviteMember = () => {\n    if (newMemberEmail.trim() && !teamMembers.some(member => member.email === newMemberEmail)) {\n      // In a real app, this would trigger an invite email and add to DB\n      setTeamMembers([...teamMembers, { id: Date.now(), name: newMemberEmail.split('@')[0], email: newMemberEmail, role: 'Pending' }]);\n      setNewMemberEmail('');\n      alert(`Invitation sent to ${newMemberEmail}`);\n    } else if (teamMembers.some(member => member.email === newMemberEmail)) {\n        alert('User already in team or invited.');\n    }\n  };\n\n  return (\n    <div className=\"space-y-8\">\n      <h1 className=\"text-4xl font-poppins font-bold text-slate-900\">Settings</h1>\n      <p className=\"text-lg text-slate-600\">Manage your app preferences, brand voice, and team.</p>\n\n      {/* Brand Voice Customization */}\n      <Card className=\"p-6 shadow-md\">\n        <CardHeader className=\"px-0 pt-0\">\n          <CardTitle className=\"text-2xl font-poppins\">Brand Voice Customization</CardTitle>\n          <CardDescription>Train the AI to match your brand tone, writing style, and formatting preferences.</CardDescription>\n        </CardHeader>\n        <CardContent className=\"px-0 pb-0 space-y-6\">\n          <div className=\"grid w-full items-center gap-1.5\">\n            <Label htmlFor=\"brandTone\">Desired Tone</Label>\n            <Select onValueChange={setBrandTone} value={brandTone}>\n              <SelectTrigger id=\"brandTone\" className=\"w-[200px]\">\n                <SelectValue placeholder=\"Select tone\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"professional\">Professional</SelectItem>\n                <SelectItem value=\"casual\">Casual</SelectItem>\n                <SelectItem value=\"friendly\">Friendly</SelectItem>\n                <SelectItem value=\"formal\">Formal</SelectItem>\n                <SelectItem value=\"witty\">Witty</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n\n          <div className=\"grid w-full items-center gap-1.5\">\n            <Label htmlFor=\"writingStyle\">Specific Writing Style</Label>\n            <Textarea\n              id=\"writingStyle\"\n              placeholder=\"e.g., 'Use short, punchy sentences', 'Incorporate storytelling elements', 'Avoid jargon'\"\n              value={writingStyle}\n              onChange={(e) => setWritingStyle(e.target.value)}\n              className=\"min-h-[100px]\"\n            />\n          </div>\n\n          <div className=\"grid w-full items-center gap-1.5\">\n            <Label htmlFor=\"formattingPreferences\">Formatting Preferences</Label>\n            <Textarea\n              id=\"formattingPreferences\"\n              placeholder=\"e.g., 'Always use bullet points for lists', 'Bold key phrases', 'Include emojis when appropriate'\"\n              value={formattingPreferences}\n              onChange={(e) => setFormattingPreferences(e.target.value)}\n              className=\"min-h-[100px]\"\n            />\n          </div>\n\n          <Button onClick={handleSaveBrandVoice} className=\"bg-blue-500 hover:bg-blue-600 text-white\">\n            Save Brand Voice Settings\n          </Button>\n        </CardContent>\n      </Card>\n\n      <Separator />\n\n      {/* Team Collaboration */}\n      <Card className=\"p-6 shadow-md\">\n        <CardHeader className=\"px-0 pt-0\">\n          <CardTitle className=\"text-2xl font-poppins\">Team Collaboration</CardTitle>\n          <CardDescription>Invite teammates to draft, edit, approve, and comment on content.</CardDescription>\n        </CardHeader>\n        <CardContent className=\"px-0 pb-0 space-y-6\">\n          <h3 className=\"text-xl font-semibold text-slate-800\">Current Team Members</h3>\n          <ul className=\"space-y-3\">\n            {teamMembers.map((member) => (\n              <li key={member.id} className=\"flex items-center justify-between p-3 border rounded-md bg-slate-50\">\n                <div>\n                  <p className=\"font-medium text-slate-900\">{member.name}</p>\n                  <p className=\"text-sm text-slate-600\">{member.email} - <span className=\"font-mono text-xs text-blue-600\">{member.role}</span></p>\n                </div>\n                <Button variant=\"outline\" size=\"sm\">Manage</Button>\n              </li>\n            ))}\n          </ul>\n\n          <Separator />\n\n          <h3 className=\"text-xl font-semibold text-slate-800\">Invite New Team Member</h3>\n          <div className=\"flex w-full max-w-sm items-center space-x-2\">\n            <Input\n              type=\"email\"\n              placeholder=\"Enter email to invite\"\n              value={newMemberEmail}\n              onChange={(e) => setNewMemberEmail(e.target.value)}\n            />\n            <Button onClick={handleInviteMember} className=\"bg-rose-500 hover:bg-rose-600 text-white\">Invite</Button>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default Settings;\n"
  }
]
